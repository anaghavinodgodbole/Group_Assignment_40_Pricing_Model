/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SalesPerson;

import model.SalesManagement.*;
import java.awt.CardLayout;
import model.Business.Business;
import model.CustomerManagement.CustomerProfile;
import model.OrderManagement.Order;
import model.OrderManagement.OrderItem;
import model.ProductManagement.Product;
import model.Supplier.Supplier;
import model.UserAccountManagement.UserAccount;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import model.SalesManagement.SalesPersonProfile;

/**
 *
 * @author nidhi
 */
public class AddOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddOrderJPanel
     */
    JPanel cardSequencePanel;
    Business business;
    UserAccount salesPerson;
    SalesPersonProfile sales;
    Order currentOrder;

    public AddOrderJPanel(JPanel cardSequencePanel, Business business, UserAccount userAccount) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.business = business;
        this.salesPerson = userAccount;
        this.sales = (SalesPersonProfile) salesPerson.getAssociatedPersonProfile();
        
        currentOrder = new Order();
        populateSupplierCombo();
        populateCustomerCombo();
        populateProductTable();
    }

    private void populateCustomerCombo() {
        cmbCustomer.removeAllItems();
        for (CustomerProfile customer : business.getCustomerDirectory().getCustomerlist()) {
            cmbCustomer.addItem(customer);
        }
    }

    private void populateSupplierCombo() {
        cmbSupplier1.removeAllItems();
        System.out.println("populateSupplierCombo");
        System.out.println(business.getSupplierDirectory().getSuplierList());
         
        for (Supplier supplier : business.getSupplierDirectory().getSuplierList()) {
            System.out.println(supplier.getName());
            cmbSupplier1.addItem(supplier);
        }

    }

    private void populateProductTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblProductCatalog.getModel();
        dtm.setRowCount(0);

        System.out.println("here");
        Supplier selectedSupplier = (Supplier) cmbSupplier1.getSelectedItem();
        if (selectedSupplier == null) {
            return;
        }
        selectedSupplier.getProductCatalog().getProductList().forEach(product -> {
            Object row[] = new Object[5];
            row[0] = product;
            row[1] = product.getFloorPrice();
            row[2] = product.getCeilingPrice();
            row[3] = product.getTargetPrice();
            row[4] = product.getRecommendedPrice();
            dtm.addRow(row);
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCustomer = new javax.swing.JLabel();
        cmbCustomer = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        lblProductCatalogue = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductCatalog = new javax.swing.JTable();
        txtNewQuantity = new javax.swing.JTextField();
        btnModifyQuantity = new javax.swing.JButton();
        lblSalesPrice = new javax.swing.JLabel();
        txtSalesPrice = new javax.swing.JTextField();
        btnRemoveOrderItem = new javax.swing.JButton();
        lblQuantity = new javax.swing.JLabel();
        btnAnalyze = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        spnQuantity = new javax.swing.JSpinner();
        lblSupplier = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        cmbSupplier1 = new javax.swing.JComboBox();
        lblItemsInCart = new javax.swing.JLabel();
        btnSubmitOrder = new javax.swing.JButton();
        labelOrderPricePerfomance = new javax.swing.JLabel();
        txtOrderPricePerfomance = new javax.swing.JTextField();
        labelOrderTotal = new javax.swing.JLabel();
        txtOrderTotal = new javax.swing.JTextField();
        labelIsOrderAboveTarget = new javax.swing.JLabel();
        txtIsOrderAboveTarget = new javax.swing.JTextField();
        labelNumberOfOrdersAboveTarget = new javax.swing.JLabel();
        txtNumberOfOrderItemsAboveTarget = new javax.swing.JTextField();

        setBackground(new java.awt.Color(250, 243, 224));

        labelCustomer.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        labelCustomer.setText("Customer :");

        cmbCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerActionPerformed(evt);
            }
        });

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity", "Total Amount", "Margin Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCart);

        lblProductCatalogue.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblProductCatalogue.setText("Product List:");

        tblProductCatalog.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        tblProductCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Floor Price", "Ceiling Price", "Target Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProductCatalog);

        btnModifyQuantity.setBackground(new java.awt.Color(142, 107, 57));
        btnModifyQuantity.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnModifyQuantity.setForeground(new java.awt.Color(255, 255, 255));
        btnModifyQuantity.setText("Modify Quantity");
        btnModifyQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyQuantityActionPerformed(evt);
            }
        });

        lblSalesPrice.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblSalesPrice.setText("Sales Price:");

        btnRemoveOrderItem.setBackground(new java.awt.Color(142, 107, 57));
        btnRemoveOrderItem.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnRemoveOrderItem.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveOrderItem.setText("Remove");
        btnRemoveOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveOrderItemActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblQuantity.setText("Quantity:");

        btnAnalyze.setBackground(new java.awt.Color(142, 107, 57));
        btnAnalyze.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnAnalyze.setForeground(new java.awt.Color(255, 255, 255));
        btnAnalyze.setText("Analyze");
        btnAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(142, 107, 57));
        btnBack.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        lblSupplier.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblSupplier.setText("Supplier :");

        btnAddToCart.setBackground(new java.awt.Color(0, 153, 51));
        btnAddToCart.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnAddToCart.setForeground(new java.awt.Color(255, 255, 255));
        btnAddToCart.setText("Add to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        cmbSupplier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplier1ActionPerformed(evt);
            }
        });

        lblItemsInCart.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblItemsInCart.setText("Items in cart:");

        btnSubmitOrder.setBackground(new java.awt.Color(142, 107, 57));
        btnSubmitOrder.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnSubmitOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrderActionPerformed(evt);
            }
        });

        labelOrderPricePerfomance.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        labelOrderPricePerfomance.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelOrderPricePerfomance.setText("Price Analysis :");

        labelOrderTotal.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        labelOrderTotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelOrderTotal.setText("Order Total");

        labelIsOrderAboveTarget.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        labelIsOrderAboveTarget.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelIsOrderAboveTarget.setText("Prices exceeding target(T/F)");

        labelNumberOfOrdersAboveTarget.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        labelNumberOfOrdersAboveTarget.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelNumberOfOrdersAboveTarget.setText("Items Above Target :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblProductCatalogue, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblSalesPrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblQuantity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(193, 193, 193)
                                .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnModifyQuantity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                                        .addComponent(btnAnalyze, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSubmitOrder))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblItemsInCart)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnRemoveOrderItem))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(labelCustomer)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(labelNumberOfOrdersAboveTarget)
                                .addGap(30, 30, 30)
                                .addComponent(txtNumberOfOrderItemsAboveTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelOrderPricePerfomance)
                                    .addComponent(labelOrderTotal)
                                    .addComponent(labelIsOrderAboveTarget))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIsOrderAboveTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtOrderPricePerfomance)
                                        .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(404, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbCustomer, cmbSupplier1});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labelIsOrderAboveTarget, labelNumberOfOrdersAboveTarget, labelOrderPricePerfomance, labelOrderTotal});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAnalyze, btnSubmitOrder});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelCustomer)
                        .addComponent(cmbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSupplier1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblProductCatalogue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalesPrice)
                    .addComponent(txtSalesPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity)
                    .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddToCart))
                .addGap(18, 18, 18)
                .addComponent(lblItemsInCart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifyQuantity)
                    .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveOrderItem)
                    .addComponent(btnSubmitOrder)
                    .addComponent(btnAnalyze, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrderPricePerfomance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelOrderPricePerfomance))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelOrderTotal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIsOrderAboveTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIsOrderAboveTarget))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumberOfOrderItemsAboveTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNumberOfOrdersAboveTarget))
                .addGap(40, 40, 40))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labelIsOrderAboveTarget, labelOrderPricePerfomance, labelOrderTotal});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnModifyQuantity, txtNewQuantity});

    }// </editor-fold>//GEN-END:initComponents

    private void cmbCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerActionPerformed
        // TODO add your handling code here:
        currentOrder = business.getMasterOrderList().newOrder((CustomerProfile) cmbCustomer.getSelectedItem(), sales);

    }//GEN-LAST:event_cmbCustomerActionPerformed

    private void btnModifyQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyQuantityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCart.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an item from the cart", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        OrderItem oi = (OrderItem) tblCart.getValueAt(selectedRow, 0);
        int newQuantity = 0;
        try {
            newQuantity = Integer.parseInt(txtNewQuantity.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid quantity", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (newQuantity <= 0) {
            JOptionPane.showMessageDialog(null, "Quantity should be greater than 0", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        currentOrder.modifyQuantity(oi, newQuantity);
        populateCartTable();
        analyse();
    }//GEN-LAST:event_btnModifyQuantityActionPerformed

    private void btnRemoveOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrderItemActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCart.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an item from the cart", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        OrderItem oi = (OrderItem) tblCart.getValueAt(selectedRow, 0);
        currentOrder.removeOrderItem(oi);
        populateCartTable();
        analyse();
    }//GEN-LAST:event_btnRemoveOrderItemActionPerformed

    private void btnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
        // TODO add your handling code here:
        analyse();
         }//GEN-LAST:event_btnAnalyzeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProductCatalog.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a product from the table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Product product = (Product) tblProductCatalog.getValueAt(selectedRow, 0);
        int actualPrice = 0;
        int quant = 0;

        try {
            actualPrice = Integer.parseInt(txtSalesPrice.getText());
            quant = (int) spnQuantity.getValue();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid sales price and quantity", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (quant <= 0) {
            JOptionPane.showMessageDialog(null, "Quantity should be greater than 0", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        currentOrder.newOrderItem(product, actualPrice, quant);
        populateCartTable();
        analyse();

    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void populateCartTable() {
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.setRowCount(0);
        for (OrderItem oi : currentOrder.getOrderItemList()) {
            Object row[] = new Object[5];
            row[0] = oi;
            row[1] = oi.getActualPrice();
            row[2] = oi.getQuantity();
            row[3] = oi.getQuantity() * oi.getActualPrice();
            model.addRow(row);
        }

    }

    private void cmbSupplier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplier1ActionPerformed
        // TODO add your handling code here:
        populateProductTable();
    }//GEN-LAST:event_cmbSupplier1ActionPerformed

    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrderActionPerformed
        // TODO add your handling code here:
        currentOrder.Submit();
        backAction();
        //backAction();
    }//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void populateProductTable(String productName) {
        DefaultTableModel model = (DefaultTableModel) tblProductCatalog.getModel();
        model.setRowCount(0);

        for (Supplier s : business.getSupplierDirectory().getSuplierList()) {
            for (Product p : s.getProductCatalog().getProductList()) {
                if (productName.equalsIgnoreCase(p.getName())) {
                    Object row[] = new Object[4];
                    row[0] = p;
                    row[1] = p.getFloorPrice();
                    row[2] = p.getCeilingPrice();
                    row[3] = p.getTargetPrice();
                    model.addRow(row);
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnAnalyze;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnModifyQuantity;
    private javax.swing.JButton btnRemoveOrderItem;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JComboBox cmbCustomer;
    private javax.swing.JComboBox cmbSupplier1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelCustomer;
    private javax.swing.JLabel labelIsOrderAboveTarget;
    private javax.swing.JLabel labelNumberOfOrdersAboveTarget;
    private javax.swing.JLabel labelOrderPricePerfomance;
    private javax.swing.JLabel labelOrderTotal;
    private javax.swing.JLabel lblItemsInCart;
    private javax.swing.JLabel lblProductCatalogue;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSalesPrice;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblProductCatalog;
    private javax.swing.JTextField txtIsOrderAboveTarget;
    private javax.swing.JTextField txtNewQuantity;
    private javax.swing.JTextField txtNumberOfOrderItemsAboveTarget;
    private javax.swing.JTextField txtOrderPricePerfomance;
    private javax.swing.JTextField txtOrderTotal;
    private javax.swing.JTextField txtSalesPrice;
    // End of variables declaration//GEN-END:variables

    private void analyse() {
        txtOrderPricePerfomance.setText(String.valueOf(currentOrder.getOrderPricePerformance()));
        txtNumberOfOrderItemsAboveTarget.setText(String.valueOf(currentOrder.getNumberOfOrderItemsAboveTarget()));
        txtIsOrderAboveTarget.setText(String.valueOf(currentOrder.isOrderAboveTotalTarget()));
        txtOrderTotal.setText(String.valueOf(currentOrder.getOrderTotal()));
    }

    private void backAction() {
        cardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.previous(cardSequencePanel);
    }
}
